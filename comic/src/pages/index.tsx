import React, { createContext, useState } from 'react';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import Comics from '../components/comics/index';
import { Navigation } from '../components/header/navigation';
import { FavoriteList } from '../components/favorites/index';
import { IntroPanel } from '../components/content/intro_panel';
import useLocalStorage from '../hooks/localStorage';
import { Favorites } from '../../types';
import { FooterPanel } from '../components/footer/footer_panel';

interface MyContextValue {
	comicNavigation: string;
	setComicNavigation: Function;
	storedValue: Favorites[];
}

export const MyContext = createContext<MyContextValue>({ comicNavigation: '', setComicNavigation: () => {}, storedValue:[] });
export default function Home() {
	const [storedValue, setStoredValue] = useLocalStorage('favorites', []);
	const [comicNavigation, setComicNavigation] = useState<string>('');

	const addToFavorites = (comicInfo: Favorites) => {
		const isFav = (savedComicInfo: Favorites) => savedComicInfo.id === comicInfo.id;

		if (storedValue && !storedValue.find(isFav)) {
			if (storedValue.length <= 10) {
				const newStorage = [...storedValue, comicInfo];

				setStoredValue(newStorage);
			}
		} else {
			const index = storedValue && storedValue.findIndex(isFav);
			const newStorage = [...storedValue];

			newStorage.splice(index, 1);
			setStoredValue(newStorage);
		}
	};

	return (
		<MyContext.Provider value={{ comicNavigation, setComicNavigation, storedValue }}>
			<main>
				<Head>
					<title>Comic Cards</title>
					<meta
						name='description'
						content='Generated by create next app'
					/>
					<meta
						name='viewport'
						content='width=device-width, initial-scale=1'
					/>
					<link
						rel='icon'
						href='/favicon.ico'
					/>
				</Head>
				<Navigation />
				<IntroPanel />
				<div className={`${styles.comicPanel} ${styles.controlled}`}>
					<Comics
						addToFavorites={addToFavorites}
						storedValue={storedValue}
					/>
					<FavoriteList
						storedValue={storedValue}
						setStoredValue={setStoredValue}
					/>
				</div>
				<FooterPanel />
			</main>
		</MyContext.Provider>
	);
}
